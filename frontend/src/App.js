import React, { useState, useEffect } from 'react';
import './App.css';

function App() {
  const [config, setConfig] = useState({
    api_key: '',
    secret_key: '',
    symbol: 'BTCUSDT',
    buy_quantity: 0.001,
    sell_quantity: 0.001,
    // NEW: Price ranges
    buy_price_min: 100,
    buy_price_max: 102,
    sell_price_min: 108,
    sell_price_max: 110,
    max_price_deviation: 0.05,
    min_competitor_size_usdt: 10.0
  });

  const [botStatus, setBotStatus] = useState({
    running: false,
    message: ''
  });

  const [logs, setLogs] = useState([]);
  const [isLoading, setIsLoading] = useState(false);

  const backendUrl = process.env.REACT_APP_BACKEND_URL || 'http://localhost:8001';

  // Fetch bot status periodically with higher frequency for aggressive monitoring
  useEffect(() => {
    const interval = setInterval(fetchBotStatus, 1000); // Increased to 1 second
    return () => clearInterval(interval);
  }, []);

  const fetchBotStatus = async () => {
    try {
      const response = await fetch(`${backendUrl}/api/bot-status`);
      const status = await response.json();
      setBotStatus(status);
    } catch (error) {
      console.error('Error fetching bot status:', error);
    }
  };

  const addLog = (message, type = 'info') => {
    const timestamp = new Date().toLocaleTimeString();
    setLogs(prev => [...prev.slice(-99), { timestamp, message, type }]);
  };

  const handleInputChange = (e) => {
    const { name, value, type } = e.target;
    setConfig(prev => ({
      ...prev,
      // Clean up whitespace from API keys and convert numbers
      [name]: type === 'number' ? parseFloat(value) : value.trim()
    }));
  };

  const validatePriceRanges = () => {
    if (config.buy_price_min >= config.buy_price_max) {
      addLog('‚ùå –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞ –ø–æ–∫—É–ø–∫–∏ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –º–µ–Ω—å—à–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π', 'error');
      return false;
    }
    if (config.sell_price_min >= config.sell_price_max) {
      addLog('‚ùå –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞ –ø—Ä–æ–¥–∞–∂–∏ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –º–µ–Ω—å—à–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π', 'error');
      return false;
    }
    if (config.buy_price_max >= config.sell_price_min) {
      addLog('‚ùå –î–∏–∞–ø–∞–∑–æ–Ω –ø–æ–∫—É–ø–∫–∏ –Ω–µ –¥–æ–ª–∂–µ–Ω –ø–µ—Ä–µ—Å–µ–∫–∞—Ç—å—Å—è —Å –¥–∏–∞–ø–∞–∑–æ–Ω–æ–º –ø—Ä–æ–¥–∞–∂–∏', 'error');
      return false;
    }
    return true;
  };

  const startBot = async () => {
    if (!config.api_key || !config.secret_key) {
      addLog('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ API –∫–ª—é—á–∏', 'error');
      return;
    }

    if (!validatePriceRanges()) {
      return;
    }

    setIsLoading(true);
    try {
      const response = await fetch(`${backendUrl}/api/start-bot`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(config)
      });

      const result = await response.json();
      
      if (response.ok) {
        addLog(`üöÄ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –¥–ª—è –ø–∞—Ä—ã ${config.symbol}`, 'success');
        addLog(`üí∞ –î–∏–∞–ø–∞–∑–æ–Ω –ø–æ–∫—É–ø–∫–∏: ${config.buy_price_min} - ${config.buy_price_max}`, 'success');
        addLog(`üí∏ –î–∏–∞–ø–∞–∑–æ–Ω –ø—Ä–æ–¥–∞–∂–∏: ${config.sell_price_min} - ${config.sell_price_max}`, 'success');
        await fetchBotStatus();
      } else {
        addLog(`‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞: ${result.detail}`, 'error');
      }
    } catch (error) {
      addLog(`üîå –û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è: ${error.message}`, 'error');
    } finally {
      setIsLoading(false);
    }
  };

  const stopBot = async () => {
    setIsLoading(true);
    try {
      const response = await fetch(`${backendUrl}/api/stop-bot`, {
        method: 'POST'
      });

      const result = await response.json();
      
      if (response.ok) {
        addLog('‚èπÔ∏è –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω', 'success');
        await fetchBotStatus();
      } else {
        addLog(`‚ùå –û—à–∏–±–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏: ${result.detail}`, 'error');
      }
    } catch (error) {
      addLog(`üîå –û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è: ${error.message}`, 'error');
    } finally {
      setIsLoading(false);
    }
  };

  return (
    <div className="App">
      <div className="container">
        <header className="header">
          <h1>ü§ñ MEXC Trading Bot</h1>
          <p>–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ç–æ—Ä–≥–æ–≤—ã–π –±–æ—Ç —Å –¥–∏–∞–ø–∞–∑–æ–Ω–∞–º–∏ —Ü–µ–Ω</p>
          <div className="range-badge">
            <span>üìä –î–ò–ê–ü–ê–ó–û–ù–ù–ê–Ø –¢–û–†–ì–û–í–õ–Ø</span>
            <small>–†–∞–±–æ—Ç–∞–µ—Ç –≤ –∑–∞–¥–∞–Ω–Ω—ã—Ö —Ü–µ–Ω–æ–≤—ã—Ö –¥–∏–∞–ø–∞–∑–æ–Ω–∞—Ö</small>
          </div>
        </header>

        {/* Configuration Section */}
        <div className="config-section">
          <h2>‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏</h2>
          <div className="config-grid">
            <div className="config-group">
              <label>API Key:</label>
              <input
                type="password"
                name="api_key"
                value={config.api_key}
                onChange={handleInputChange}
                placeholder="–í–≤–µ–¥–∏—Ç–µ API –∫–ª—é—á MEXC"
                className="input-field"
              />
            </div>

            <div className="config-group">
              <label>Secret Key:</label>
              <input
                type="password"
                name="secret_key"
                value={config.secret_key}
                onChange={handleInputChange}
                placeholder="–í–≤–µ–¥–∏—Ç–µ Secret –∫–ª—é—á MEXC"
                className="input-field"
              />
            </div>

            <div className="config-group">
              <label>–í–∞–ª—é—Ç–Ω–∞—è –ø–∞—Ä–∞:</label>
              <input
                type="text"
                name="symbol"
                value={config.symbol}
                onChange={handleInputChange}
                placeholder="BTCUSDT"
                className="input-field"
              />
            </div>

            {/* NEW: Price Range Configuration */}
            <div className="config-group range-section">
              <h3>üí∞ –î–∏–∞–ø–∞–∑–æ–Ω –ø–æ–∫—É–ø–∫–∏</h3>
              
              <div className="range-inputs">
                <div className="range-input-group">
                  <label>–ú–∏–Ω. —Ü–µ–Ω–∞ –ø–æ–∫—É–ø–∫–∏:</label>
                  <input
                    type="number"
                    name="buy_price_min"
                    value={config.buy_price_min}
                    onChange={handleInputChange}
                    step="0.01"
                    min="0.01"
                    className="input-field range-input"
                    placeholder="100"
                  />
                </div>
                
                <div className="range-input-group">
                  <label>–ú–∞–∫—Å. —Ü–µ–Ω–∞ –ø–æ–∫—É–ø–∫–∏:</label>
                  <input
                    type="number"
                    name="buy_price_max"
                    value={config.buy_price_max}
                    onChange={handleInputChange}
                    step="0.01"
                    min="0.01"
                    className="input-field range-input"
                    placeholder="102"
                  />
                </div>
              </div>
              
              <div className="range-info">
                <small>üéØ –ë–æ—Ç –±—É–¥–µ—Ç –ø–æ–∫—É–ø–∞—Ç—å —Ç–æ–ª—å–∫–æ –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ {config.buy_price_min} - {config.buy_price_max}</small>
              </div>
            </div>

            <div className="config-group range-section">
              <h3>üí∏ –î–∏–∞–ø–∞–∑–æ–Ω –ø—Ä–æ–¥–∞–∂–∏</h3>
              
              <div className="range-inputs">
                <div className="range-input-group">
                  <label>–ú–∏–Ω. —Ü–µ–Ω–∞ –ø—Ä–æ–¥–∞–∂–∏:</label>
                  <input
                    type="number"
                    name="sell_price_min"
                    value={config.sell_price_min}
                    onChange={handleInputChange}
                    step="0.01"
                    min="0.01"
                    className="input-field range-input"
                    placeholder="108"
                  />
                </div>
                
                <div className="range-input-group">
                  <label>–ú–∞–∫—Å. —Ü–µ–Ω–∞ –ø—Ä–æ–¥–∞–∂–∏:</label>
                  <input
                    type="number"
                    name="sell_price_max"
                    value={config.sell_price_max}
                    onChange={handleInputChange}
                    step="0.01"
                    min="0.01"
                    className="input-field range-input"
                    placeholder="110"
                  />
                </div>
              </div>
              
              <div className="range-info">
                <small>üéØ –ë–æ—Ç –±—É–¥–µ—Ç –ø—Ä–æ–¥–∞–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ {config.sell_price_min} - {config.sell_price_max}</small>
              </div>
            </div>

            <div className="config-group">
              <label>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–∞ –ø–æ–∫—É–ø–∫—É:</label>
              <input
                type="number"
                name="buy_quantity"
                value={config.buy_quantity}
                onChange={handleInputChange}
                step="0.001"
                min="0.001"
                className="input-field"
              />
            </div>

            <div className="config-group">
              <label>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–∞ –ø—Ä–æ–¥–∞–∂—É:</label>
              <input
                type="number"
                name="sell_quantity"
                value={config.sell_quantity}
                onChange={handleInputChange}
                step="0.001"
                min="0.001"
                className="input-field"
              />
            </div>

            <div className="config-group">
              <label>–ú–∏–Ω. —Å—É–º–º–∞ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–∞ –¥–ª—è –ø–µ—Ä–µ–±–∏–≤–∞–Ω–∏—è ($):</label>
              <input
                type="number"
                name="min_competitor_size_usdt"
                value={config.min_competitor_size_usdt}
                onChange={handleInputChange}
                step="1"
                min="1"
                max="1000"
                className="input-field"
                placeholder="10"
              />
              <small style={{color: '#666', fontSize: '0.8rem', marginTop: '4px'}}>
                üí° –ù–µ –ø–µ—Ä–µ–±–∏–≤–∞—Ç—å –∑–∞–∫–∞–∑—ã –º–µ–Ω—å—à–µ —ç—Ç–æ–π —Å—É–º–º—ã - –ø—É—Å—Ç—å –∏—Å–ø–æ–ª–Ω—è—Ç—Å—è —Å–∞–º–∏
              </small>
            </div>
          </div>

          {/* Price Range Visualization */}
          <div className="range-visualization">
            <h3>üìä –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –¥–∏–∞–ø–∞–∑–æ–Ω–æ–≤</h3>
            <div className="range-chart">
              <div className="range-bar buy-range">
                <span className="range-label">–ü–æ–∫—É–ø–∫–∞: {config.buy_price_min} - {config.buy_price_max}</span>
              </div>
              <div className="range-gap">
                <span className="gap-info">–ó–∞–∑–æ—Ä: {(config.sell_price_min - config.buy_price_max).toFixed(2)}</span>
              </div>
              <div className="range-bar sell-range">
                <span className="range-label">–ü—Ä–æ–¥–∞–∂–∞: {config.sell_price_min} - {config.sell_price_max}</span>
              </div>
            </div>
          </div>

          <div className="button-group">
            <button
              onClick={startBot}
              disabled={isLoading || botStatus.running}
              className="btn btn-start"
            >
              {isLoading ? '‚è≥ –ó–∞–ø—É—Å–∫...' : '‚ñ∂Ô∏è –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞'}
            </button>

            <button
              onClick={stopBot}
              disabled={isLoading || !botStatus.running}
              className="btn btn-stop"
            >
              {isLoading ? '‚è≥ –û—Å—Ç–∞–Ω–æ–≤–∫–∞...' : '‚èπÔ∏è –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –±–æ—Ç–∞'}
            </button>
          </div>
        </div>

        {/* Status Section */}
        <div className="status-section">
          <h2>üìä –°—Ç–∞—Ç—É—Å –±–æ—Ç–∞</h2>
          <div className="status-grid">
            <div className="status-item">
              <span className="status-label">–°–æ—Å—Ç–æ—è–Ω–∏–µ:</span>
              <span className={`status-value ${botStatus.running ? 'running' : 'stopped'}`}>
                {botStatus.running ? 'üü¢ –†–∞–±–æ—Ç–∞–µ—Ç (–î–ò–ê–ü–ê–ó–û–ù–ù–û)' : 'üî¥ –û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'}
              </span>
            </div>

            {botStatus.symbol && (
              <div className="status-item">
                <span className="status-label">–ü–∞—Ä–∞:</span>
                <span className="status-value">{botStatus.symbol}</span>
              </div>
            )}

            {/* NEW: Display current price ranges */}
            {botStatus.buy_range && (
              <div className="status-item">
                <span className="status-label">–î–∏–∞–ø–∞–∑–æ–Ω –ø–æ–∫—É–ø–∫–∏:</span>
                <span className="status-value buy-range-indicator">
                  üí∞ {botStatus.buy_range.min} - {botStatus.buy_range.max}
                </span>
              </div>
            )}

            {botStatus.sell_range && (
              <div className="status-item">
                <span className="status-label">–î–∏–∞–ø–∞–∑–æ–Ω –ø—Ä–æ–¥–∞–∂–∏:</span>
                <span className="status-value sell-range-indicator">
                  üí∏ {botStatus.sell_range.min} - {botStatus.sell_range.max}
                </span>
              </div>
            )}

            {botStatus.min_competitor_size_usdt && (
              <div className="status-item">
                <span className="status-label">–ú–∏–Ω. —Ä–∞–∑–º–µ—Ä –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–∞:</span>
                <span className="status-value smart">${botStatus.min_competitor_size_usdt}</span>
              </div>
            )}

            {botStatus.update_frequency && (
              <div className="status-item">
                <span className="status-label">–ß–∞—Å—Ç–æ—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π:</span>
                <span className="status-value aggressive">‚ö° {botStatus.update_frequency}</span>
              </div>
            )}

            {botStatus.best_bid && (
              <div className="status-item">
                <span className="status-label">–õ—É—á—à–∞—è –ø–æ–∫—É–ø–∫–∞:</span>
                <span className="status-value">{botStatus.best_bid}</span>
              </div>
            )}

            {botStatus.best_ask && (
              <div className="status-item">
                <span className="status-label">–õ—É—á—à–∞—è –ø—Ä–æ–¥–∞–∂–∞:</span>
                <span className="status-value">{botStatus.best_ask}</span>
              </div>
            )}

            {botStatus.spread && (
              <div className="status-item">
                <span className="status-label">–°–ø—Ä–µ–¥:</span>
                <span className="status-value">{botStatus.spread}</span>
              </div>
            )}

            {botStatus.initial_price && (
              <div className="status-item">
                <span className="status-label">–ù–∞—á–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞:</span>
                <span className="status-value">{botStatus.initial_price}</span>
              </div>
            )}

            {botStatus.orderbook_depth && (
              <div className="status-item">
                <span className="status-label">–ì–ª—É–±–∏–Ω–∞ —Å—Ç–∞–∫–∞–Ω–∞:</span>
                <span className="status-value">
                  üìà {botStatus.orderbook_depth.bids_count} bids |
                  üìâ {botStatus.orderbook_depth.asks_count} asks
                </span>
              </div>
            )}
          </div>

          {/* Active Orders with Range Information */}
          {(botStatus.current_buy_order || botStatus.current_sell_order) && (
            <div className="orders-section">
              <h3>‚öîÔ∏è –ê–∫—Ç–∏–≤–Ω—ã–µ –æ—Ä–¥–µ—Ä–∞ (–í –¥–∏–∞–ø–∞–∑–æ–Ω–µ —Ü–µ–Ω)</h3>

              {botStatus.current_buy_order && (
                <div className="order-item buy-order range-based">
                  <strong>üü¢ –ü–û–ö–£–ü–ö–ê –í –î–ò–ê–ü–ê–ó–û–ù–ï:</strong>
                  <span>–¶–µ–Ω–∞: {botStatus.current_buy_order.price}</span>
                  <span>ID: {botStatus.current_buy_order.orderId}</span>
                  <span className="range-indicator">
                    üìä –î–∏–∞–ø–∞–∑–æ–Ω: {botStatus.buy_range?.min} - {botStatus.buy_range?.max}
                  </span>
                </div>
              )}

              {botStatus.current_sell_order && (
                <div className="order-item sell-order range-based">
                  <strong>üî¥ –ü–†–û–î–ê–ñ–ê –í –î–ò–ê–ü–ê–ó–û–ù–ï:</strong>
                  <span>–¶–µ–Ω–∞: {botStatus.current_sell_order.price}</span>
                  <span>ID: {botStatus.current_sell_order.orderId}</span>
                  <span className="range-indicator">
                    üìä –î–∏–∞–ø–∞–∑–æ–Ω: {botStatus.sell_range?.min} - {botStatus.sell_range?.max}
                  </span>
                </div>
              )}
            </div>
          )}
        </div>

        {/* Logs Section */}
        <div className="logs-section">
          <h2>üìù –ñ—É—Ä–Ω–∞–ª —Å–æ–±—ã—Ç–∏–π</h2>
          <div className="logs-container">
            {logs.length === 0 ? (
              <p className="no-logs">–ñ—É—Ä–Ω–∞–ª –ø—É—Å—Ç</p>
            ) : (
              logs.map((log, index) => (
                <div key={index} className={`log-item ${log.type}`}>
                  <span className="log-time">{log.timestamp}</span>
                  <span className="log-message">{log.message}</span>
                </div>
              ))
            )}
          </div>
        </div>

        {/* Help Section */}
        <div className="help-section">
          <h2>‚ÑπÔ∏è –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –¥–∏–∞–ø–∞–∑–æ–Ω–Ω–æ–π —Ç–æ—Ä–≥–æ–≤–ª–µ</h2>
          <div className="help-content">
            <ol>
              <li>–ü–æ–ª—É—á–∏—Ç–µ API –∫–ª—é—á–∏ –≤ –ª–∏—á–Ω–æ–º –∫–∞–±–∏–Ω–µ—Ç–µ MEXC (—Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è: —Ç–æ—Ä–≥–æ–≤–ª—è)</li>
              <li>–í–≤–µ–¥–∏—Ç–µ API –∫–ª—é—á–∏ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ç–æ—Ä–≥–æ–≤–ª–∏</li>
              <li>–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞–ª—é—Ç–Ω—É—é –ø–∞—Ä—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ XXXUSDT</li>
              <li>
                <strong>–ù–∞—Å—Ç—Ä–æ–π—Ç–µ –¥–∏–∞–ø–∞–∑–æ–Ω—ã —Ü–µ–Ω:</strong>
                <ul>
                  <li>üí∞ –î–∏–∞–ø–∞–∑–æ–Ω –ø–æ–∫—É–ø–∫–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 100-102): –±–æ—Ç –±—É–¥–µ—Ç –ø–æ–∫—É–ø–∞—Ç—å —Ç–æ–ª—å–∫–æ –≤ —ç—Ç–æ–º –¥–∏–∞–ø–∞–∑–æ–Ω–µ</li>
                  <li>üí∏ –î–∏–∞–ø–∞–∑–æ–Ω –ø—Ä–æ–¥–∞–∂–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 108-110): –±–æ—Ç –±—É–¥–µ—Ç –ø—Ä–æ–¥–∞–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –≤ —ç—Ç–æ–º –¥–∏–∞–ø–∞–∑–æ–Ω–µ</li>
                  <li>‚ö†Ô∏è –î–∏–∞–ø–∞–∑–æ–Ω—ã –Ω–µ –¥–æ–ª–∂–Ω—ã –ø–µ—Ä–µ—Å–µ–∫–∞—Ç—å—Å—è!</li>
                </ul>
              </li>
              <li>–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ —Ä–∞–∑–º–µ—Ä—ã –æ—Ä–¥–µ—Ä–æ–≤ –∏ –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–∞</li>
              <li>–ù–∞–∂–º–∏—Ç–µ "–ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞" –¥–ª—è –Ω–∞—á–∞–ª–∞ –¥–∏–∞–ø–∞–∑–æ–Ω–Ω–æ–π —Ç–æ—Ä–≥–æ–≤–ª–∏</li>
            </ol>

            <div className="range-features">
              <h4>üìä –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –¥–∏–∞–ø–∞–∑–æ–Ω–Ω–æ–π —Ç–æ—Ä–≥–æ–≤–ª–∏:</h4>
              <ul>
                <li>üéØ –ß–µ—Ç–∫–æ–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ —Ü–µ–Ω –ø–æ–∫—É–ø–∫–∏ –∏ –ø—Ä–æ–¥–∞–∂–∏</li>
                <li>‚öîÔ∏è –ü–µ—Ä–µ–±–∏–≤–∞–Ω–∏–µ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤ —Ç–æ–ª—å–∫–æ –≤–Ω—É—Ç—Ä–∏ –¥–∏–∞–ø–∞–∑–æ–Ω–æ–≤</li>
                <li>üöÄ –í—ã—Å–æ–∫–∞—è —á–∞—Å—Ç–æ—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π (100ms)</li>
                <li>üîÑ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —É–¥–µ—Ä–∂–∞–Ω–∏–µ –ø–æ–∑–∏—Ü–∏–π –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–∞—Ö</li>
                <li>üìà –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–∞—è –∞–ª–≥–æ—Ä–∏—Ç–º–∏—á–µ—Å–∫–∞—è —Ç–æ—Ä–≥–æ–≤–ª—è</li>
                <li>üí° –ò–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ –º–µ–ª–∫–∏—Ö –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤ (–Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç—Å—è)</li>
              </ul>
            </div>

            <div className="warning">
              <strong>‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ:</strong> –î–∏–∞–ø–∞–∑–æ–Ω–Ω–∞—è —Ç–æ—Ä–≥–æ–≤–ª—è –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞–º–∏ —Å–≤—è–∑–∞–Ω–∞ —Å –≤—ã—Å–æ–∫–∏–º–∏ —Ä–∏—Å–∫–∞–º–∏.
              –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–æ–ª—å–∫–æ —Ç–µ —Å—Ä–µ–¥—Å—Ç–≤–∞, –ø–æ—Ç–µ—Ä—é –∫–æ—Ç–æ—Ä—ã—Ö –º–æ–∂–µ—Ç–µ —Å–µ–±–µ –ø–æ–∑–≤–æ–ª–∏—Ç—å.
              –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –¥–∏–∞–ø–∞–∑–æ–Ω—ã –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –∏ –Ω–µ –ø–µ—Ä–µ—Å–µ–∫–∞—é—Ç—Å—è.
            </div>
          </div>
        </div>
      </div>
    </div>
  );
}

export default App;